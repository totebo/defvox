

local rendy = require "rendy.rendy"
local camera = require "main.camera"
local level = require "main.level"

function init(self)


	--local url = "/custom_resources/test.vox"
	local url = "/custom_resources/terrain.vox"
	level.load(url)


	if sys.get_engine_info().is_debug then
		sys.set_error_handler(function()
			print("ERROR ^^^")
			sys.exit(1)
		end)
	end


	msg.post("#", "acquire_input_focus")

end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)

	level.update(self, dt)

end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end



function on_input(self, action_id, action)

	local is_digging = level.on_input(self, action_id, action)
	camera.set_camera_locked(is_digging)
	camera.on_input(self, action_id, action)

end




function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
